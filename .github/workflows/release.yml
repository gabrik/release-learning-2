name: release-please
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  checks:
      name: Checks
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Install depdendencies
          run: |
            sudo apt update
            sudo apt install -y protobuf-compiler
        
        - name: Install Rust toolchain
          run: |
              rustup show
              rustup component add rustfmt clippy

        - name: Code format check
          uses: actions-rs/cargo@v1
          with:
            command: fmt
            args: -- --check

        - name: Unit tests
          uses: actions-rs/cargo@v1
          with:
            command: test
            args: --all

        - name: Clippy
          uses: actions-rs/cargo@v1
          with:
            command: clippy
            args: --all-targets -- -D warnings

        - name: Clippy unstable
          uses: actions-rs/cargo@v1
          with:
            command: clippy
            args: --all-targets -- -D warnings

        - name: Clean up
          uses: actions-rs/cargo@v1
          with:
            command: clean

  release-please:
    name: release
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          config-file: release-please-config.json
      
      - run: | 
          echo "is release? ${{steps.release.outputs.release_created}}"
          echo "next version is ${{ steps.release.outputs.release_major }}.${{ steps.release.outputs.release_minor }}.${{ steps.release.outputs.release_patch }}"
          echo "tag is ${{ steps.release.outputs.tag_name }}"

    outputs:
        release_created:  ${{ steps.release.outputs.release_created }}
        tag_name: ${{ steps.release.outputs.tag_name }}
        upload_url: ${{ steps.release.outputs.upload_url }}
        major:  ${{ steps.release.outputs.release_major }}
        minor: ${{ steps.release.outputs.release_minor }}
        patch: ${{ steps.release.outputs.release_patch }}

  publish-js:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [release-please]
    steps:
      # The logic below handles the npm publication:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: build
        env:
          # GITHUB_TOKEN: ${{ secrets.PAT }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./clients/nodejs
        run: |
            yarn install
            yarn build
            yarn pack
            yarn npm login --publish 
            yarn publish --verbose

  publish-py:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Get version
        id: get_version
        run: |
          version=$(echo  ${{ needs.release-please.outputs.tag_name }} | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p')  
          echo "Version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: install dependency
        run: pip3 install build wheel setuptools
      - name: build
        run: |
          cd clients/python
          python3 -m build --wheel
        
      - name: upload python wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release-please.outputs.upload_url }}
          asset_path: clients/python/dist/release_learning_python-${{ steps.get_version.outputs.version }}-py3-none-any.whl
          asset_name: release_learning_python-${{ steps.get_version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/zip